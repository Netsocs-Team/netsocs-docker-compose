services:
    # Main Reverse Proxy with TLS
    caddy:
        image: caddy:2.8-alpine
        container_name: netsocs-caddy
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
            - caddy_data:/data
            - caddy_config:/config
        networks:
            - netsocs-network
        depends_on:
            - traefik

    # Internal Reverse Proxy (Traefik)
    traefik:
        image: traefik:v3.0
        container_name: traefik
        restart: always
        ports:
            - "8081:8081"
        environment:
            - HTTP_HOSTNAME=${HTTP_HOSTNAME}
        # No ports exposed - only internal communication
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
            - ./traefik/dynamic:/etc/traefik/dynamic:ro
            - ./traefik/certificates:/etc/traefik/certificates:ro
        networks:
            - netsocs-network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
            - "traefik.http.routers.traefik.service=api@internal"
            - "traefik.http.routers.traefik.entrypoints=web"

    # Database Services
    netsocs-mongodb:
        image: mongo:7.0
        restart: always
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER:-root}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
            - MONGO_INITDB_DATABASE=${MONGO_DATABASE:-netsocs}
        volumes:
            - mongodb_data:/data/db
        ports:
            - "27017:27017"
        networks:
            - netsocs-network

    netsocs-redis-service:
        image: redis:7.2-alpine
        restart: always
        command: redis-server --requirepass ${REDIS_PASS:-password}
        volumes:
            - redis_data:/data
        ports:
            - "6379:6379"
        networks:
            - netsocs-network

    netsocs-mysql:
        image: mysql:8.0
        restart: always
        environment:
            - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-rootpassword}
            - MYSQL_DATABASE=${DB_NAME:-netsocs}
            - MYSQL_USER=${DB_USER:-netsocs}
            - MYSQL_PASSWORD=${DB_PASS:-password}
        volumes:
            - mysql_data:/var/lib/mysql
            - ./mysql/init:/docker-entrypoint-initdb.d
        ports:
            - "3306:3306"
        networks:
            - netsocs-network

    keycloak-service:
        image: ghcr.io/netsocs-team/service.kc/main:c5e69dd293ccac44f84cf85f9953381c98609df4
        restart: always
        environment:
            - KEYCLOAK_LOGLEVEL=ALL
            - KEYCLOAK_ADMIN=admin
            - KEYCLOAK_ADMIN_PASSWORD=admin123
            - KEYCLOAK_HTTP_PORT=8080
            - KEYCLOAK_HTTPS_PORT=8443
            - KC_DB=mysql
            - KC_DB_URL_DATABASE=${DB_NAME}
            - KC_PROXY=edge
            - KC_HOSTNAME=${HTTP_HOSTNAME}/auth
            - KC_DB_USERNAME=${DB_USER}
            - KC_DB_PASSWORD=${DB_PASS}
            - KC_DB_URL_HOST=${DB_HOST}
            - KC_DB_URL_PORT=${DB_PORT}
        networks:
            - netsocs-network
    # Application Services

    netsocs-modules-dashboard-frontend-service:
        image: ghcr.io/netsocs-team/module.dashboard/frontend:dev
        restart: always
        networks:
            - netsocs-network

    netsocs-modules-dashboard-backend-service-v2:
        restart: always
        depends_on:
            - netsocs-mysql
            - netsocs-mongodb
            - netsocs-redis-service
        image: ghcr.io/netsocs-team/module.dashboard/backendv2:dev
        environment:
            - PORT=3000
            - MYSQLDB_USER=${DB_USER}
            - MYSQLDB_PASSWORD=${DB_PASS}
            - MYSQLDB_HOST=${DB_HOST}
            - MYSQLDB_PORT=${DB_PORT}
            - MYSQLDB_DATABASE=${DB_NAME}
            - MYSQLDB_TABLE_PREFIX=dashboard_
            - DRIVERHUB_API_URL=http://netsocs-driverhub-service:3196
            - MONGODB_URI=${MONGO_URI}
            - MONGODB_DATABASE=${MONGO_DATABASE}
        networks:
            - netsocs-network

    netsocs-modules-configuration-frontend-service:
        image: ghcr.io/netsocs-team/module.configuration/frontend:dev
        restart: always
        networks:
            - netsocs-network

    netsocs-modules-configuration-backendv2-service:
        restart: always
        depends_on:
            - netsocs-mysql
            - netsocs-mongodb
            - netsocs-redis-service
        image: ghcr.io/netsocs-team/module.configuration/backend_v2:dev
        env_file:
            - .env
        environment:
            - PORT=3091
            - NAME_DB=${DB_NAME}
            - HOST_DB=${DB_HOST}
            - USER_DB=${DB_USER}
            - PASS_DB=${DB_PASS}
            - PORT_DB=${DB_PORT}
            - DRIVER_HUB_URL_API=http://netsocs-driverhub-service:3196
            - DEFAULT_REPO=https://netsocs-public-drivers-repository.s3.us-east-1.amazonaws.com/repodemo.json
            - KEYCLOACK_REALM=${KEYCLOAK_REALM:-master}
            - KEYCLOACK_BASE_URL=${HTTP_HOSTNAME}
            - KEYCLOACK_CLIENT_ID=${KEYCLOAK_CLIENT_ID:-netsocs-config}
            - KEYCLOACK_CLIENT_SECRET=${KEYCLOAK_CLIENT_SECRET}
            - KEYCLOACK_ADMIN_USERNAME=${KEYCLOAK_ADMIN_USERNAME:-admin}
            - KEYCLOACK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin123}
            - NETSOCS_VERSION=${NETSOCS_VERSION:-dev}
        networks:
            - netsocs-network

    automation-backend-service:
        restart: always
        depends_on:
            - netsocs-mysql
            - netsocs-mongodb
            - netsocs-redis-service
        image: ghcr.io/netsocs-team/module.automation/backend:dev
        environment:
            - MYSQLDB_HOST=${DB_HOST}
            - MYSQLDB_USER=${DB_USER}
            - MYSQLDB_PASSWORD=${DB_PASS}
            - MYSQLDB_PORT=${DB_PORT}
            - MYSQL_DATABASE=${DB_NAME}
            - MYSQLDB_AUTOMATION_DATABASE=${DB_NAME}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_PASSWORD=${REDIS_PASS}
            - DB_TABLE_PREFIX=automation_
        networks:
            - netsocs-network

    netsocs-modules-accesscontrol-backend-service:
        restart: always
        depends_on:
            - netsocs-mysql
            - netsocs-mongodb
            - netsocs-redis-service
        image: ghcr.io/netsocs-team/module.access_control/backend:main
        environment:
            - MYSQL_HOST=${DB_HOST}
            - MYSQL_USER=${DB_USER}
            - MYSQL_PASSWORD=${DB_PASS}
            - MYSQL_PORT=${DB_PORT}
            - TABLE_PREFIX=ac
            - MYSQL_DATABASE=${DB_NAME}
            - API_PORT=3000
            - ENABLE_CORS=true
            - MAIL_HOST=gator2120.hostgator.com
            - MAIL_PORT=465
            - MAIL_USERNAME=teresa.carreno@netsocs.com
            - MAIL_PASSWORD=p4ssword
            - DRIVERHUB_URL=http://netsocs-driverhub-service:3196
            - CONFIG_MODULE_API_V2_URL=http://netsocs-modules-configuration-backendv2-service:3091/api/v2
            - STATIC_FOLDER=static
        networks:
            - netsocs-network

    netsocs-driverhub-service:
        restart: always
        depends_on:
            - netsocs-mysql
            - netsocs-mongodb
            - netsocs-redis-service
        image: ghcr.io/netsocs-team/service.driver_hub/backend:dev
        environment:
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - REDIS_PASSWORD=${REDIS_PASS}
            - STATIC_FOLDER=/app/static
            - MYSQL_DATABASE=${DB_NAME}
            - MYSQL_USER=${DB_USER}
            - MYSQL_PASSWORD=${DB_PASS}
            - MYSQL_HOST=${DB_HOST}
            - MYSQL_PORT=${DB_PORT}
            - MONGODB_URI=${MONGO_URI}
            - MEDIAMTX_DEFAULT_HOSTNAME=${MEDIAMTX_HOSTNAME}
        networks:
            - netsocs-network

    mediamtx-service:
        restart: always
        image: ghcr.io/netsocs-team/mediamtx_with_persistence/main:latest
        network_mode: host

        volumes:
            - ./recordings:/recordings:rw
            - ./mediamtx:/etc/mediamtx

# Volumes for persistent data
volumes:
    mongodb_data:
        driver: local
    redis_data:
        driver: local
    mysql_data:
        driver: local
    caddy_data:
        driver: local
    caddy_config:
        driver: local

# Networks for service communication
networks:
    netsocs-network:
        driver: bridge
